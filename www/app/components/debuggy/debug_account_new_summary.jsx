import React from 'react';

import { Localized } from "@fluent/react";

/**
 * Cronsync-centered debug view.
 *
 * Upon entry we:
 * - Register for the "newMessagesUpdate"
 * - Ask the backend to flush the current newness track status.
 *
 * Our display and actions:
 * - We have a big "force cronsync" button that triggers a cronsync.
 * - For each account we show the current summary payload generated by the
 *   backend.  For now our felam implementation is designed to produce exactly
 *   what gaia mail wants so we can just copy the code in.
 * - We show a "clear" button to explicitly request that the new tracking be
 *   cleared
 */
export default class DebugAccountNewSummary extends React.Component {
  render() {
    return (
      <div className="debug-cronsync-account-data">
        <div>{ this.props.accountId }</div>
        <div className="debug-cronsync-account-data-dump">
          { JSON.stringify(this.props.newData, null, 2) }
        </div>
        <button onClick={ this.clearNewTracking }>
          <Localized
            id='debugClearNewTracking'
            />
        </button>
      </div>
    );
  }

  clearNewTracking() {
    this.props.mailApi.clearNewTrackingForAccount({
      accountId: this.props.accountId,
      silent: false
    });
  }
};
